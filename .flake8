[flake8]

################### PROGRAM ################################

# Specify the number of subprocesses that Flake8 will use to run checks in parallel.
jobs = auto


################### OUTPUT #################################

########## VERBOSITY ##########

# Increase the verbosity of Flake8’s output.
verbose = 0
# Decrease the verbosity of Flake8’s output.
quiet = 0


########## FORMATTING ##########

# Select the formatter used to display errors to the user.
format = default

# Print the total number of errors.
count = True
# Print the source code generating the error/warning in question.
show-source = True
# Count the number of occurrences of each error/warning code and print a report.
statistics = True


########## TARGETS ##########

# Redirect all output to the specified file.
output-file = .flake8.log
# Also print output to stdout if output-file has been configured.
tee = True


######################## FILE PATTERNS #####################

# Provide a comma-separated list of glob patterns to exclude from checks.
exclude =
# git folder
    .git,
# github actions folder
    .github,
# python cache
    __pycache__,
# virtual environment
    venv,
    # project misc
    assets,
    data,



# only test src and test directories
#filename =
#	src/*.py,
#	tests/*.py


################### LINTING ################################

########## OPTIONS ##########

# Report all errors, even if it is on the same line as a `# NOQA` comment.
disable-noqa = False

# Set the maximum length that any line (with some exceptions) may be.
max-line-length = 120
# Set the maximum allowed McCabe complexity value for a block of code.
max-complexity = 10
# Toggle whether pycodestyle should enforce matching the indentation of the opening bracket’s line.
# incluences E131 and E133
hang-closing = False


########## RULES ##########

# ERROR CODES
#
# E/W  - PEP8 errors/warnings (pycodestyle)
# F    - linting errors (pyflakes)
# C    - McCabe complexity error (mccabe)
#
# W503 - line break before binary operator

# Specify a list of codes to ignore.
ignore =
    W503,
    F841 test/*.py # ignores unused variables in tests
    F401 */__init__.py # ignores unused imports in __init__ files
# Specify the list of error codes you wish Flake8 to report.
select =
    E,
    W,
    F,
    C
# Enable off-by-default extensions.
enable-extensions =


########## DOCSTRING ##########

# Enable PyFlakes syntax checking of doctests in docstrings.
doctests = True

# Specify which files are checked by PyFlakes for doctest syntax.
include-in-doctest = src/*.py
# Specify which files are not to be checked by PyFlakes for doctest syntax.
